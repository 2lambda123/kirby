# To upgrade pinned actions: Use https://github.com/mheap/pin-github-action

name: CI - Frontend
on:
  push:
    branches-ignore:
      - "main"
      - "release/**"
    paths:
      - ".github/workflows/frontend.yml"
      - "panel/**"
      - "!panel/scripts/**"
  pull_request:
    branches-ignore:
      - "main"
      - "release/**"
    paths:
      - ".github/workflows/frontend.yml"
      - "panel/**"
      - "!panel/scripts/**"
  workflow_call:

  workflow_dispatch:

jobs:
  tests:
    name: "Unit tests"

    # run job only under the following conditions:
    # - can be triggered manually from any repository
    # - if on pull request, only run if from a fork
    #   (our own repo is covered by the push event)
    # - if on push, only run CI automatically for the
    #   main getkirby/kirby repo and for forks
    if: >
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository
      ) ||
      (
        github.event_name == 'push' &&
        (github.repository == 'getkirby/kirby' || github.repository_owner != 'getkirby')
      )

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3

      - name: Set up Node.js problem matchers and cache npm dependencies
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # pin@v3
        with:
          cache: "npm"
          cache-dependency-path: panel/package-lock.json

      - name: Install npm dependencies
        id: finishPrepare
        run: npm ci
        working-directory: panel

      - name: Run JavaScript unit tests
        if: always() && steps.finishPrepare.outcome == 'success'
        run: npm run test:unit:coverage
        working-directory: panel

      # TODO: Disabled until Vitest coverage reporting is accurate and
      #       Kirby's frontend tests are useful enough that we need this metric
      # - name: Upload coverage results to Codecov
      #   env:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #   if: env.token != ''
      #   uses: codecov/codecov-action@858dd794fbb81941b6d60b0dca860878cba60fa9 # pin@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # for better reliability if the GitHub API is down
      #     fail_ci_if_error: true
      #     files: ${{ github.workspace }}/panel/coverage/lcov.info
      #     flags: frontend

  coding-style:
    name: "Coding Style"

    # run job only under the following conditions:
    # - can be triggered manually from any repository
    # - if on pull request, only run if from a fork
    #   (our own repo is covered by the push event)
    # - if on push, only run CI automatically for the
    #   main getkirby/kirby repo and for forks
    if: >
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository
      ) ||
      (
        github.event_name == 'push' &&
        (github.repository == 'getkirby/kirby' || github.repository_owner != 'getkirby')
      )

    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      php: "8.0"

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3

      - name: Set up Node.js problem matchers and cache npm dependencies
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # pin@v3
        with:
          cache: "npm"
          cache-dependency-path: panel/package-lock.json

      - name: Install npm dependencies
        id: finishPrepare
        run: npm ci
        working-directory: panel

      - name: Check for JavaScript coding style violations (ESLint)
        if: always() && steps.finishPrepare.outcome == 'success'
        # Use the --no-fix flag in push builds to get a failed CI status
        run: >
          npm run lint -- --max-warnings 0 --format stylish
          ${{ github.event_name != 'pull_request' && '--no-fix' || '' }}
        working-directory: panel

      - name: Create code suggestions from the coding style changes (on PR only)
        if: >
          always() && steps.finishPrepare.outcome == 'success' &&
          github.event_name == 'pull_request'
        uses: reviewdog/action-suggester@ab82daa6ea9b84fe43db7747bb10fa087f34e1ab # pin@v1
        with:
          tool_name: ESLint
          fail_on_error: "true"

      - name: Check for JavaScript coding style violations (Prettier)
        if: always() && steps.finishPrepare.outcome == 'success'
        # Use the --check flag in push builds to get a failed CI status
        run: >
          npm run format --
          ${{ github.event_name != 'pull_request' && '--check' || '--write' }}
        working-directory: panel

      - name: Create code suggestions from the coding style changes (on PR only)
        if: >
          always() && steps.finishPrepare.outcome == 'success' &&
          github.event_name == 'pull_request'
        uses: reviewdog/action-suggester@ab82daa6ea9b84fe43db7747bb10fa087f34e1ab # pin@v1
        with:
          tool_name: Prettier
          fail_on_error: "true"
