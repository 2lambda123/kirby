{"displayName":"IconFrame","description":"Use <k-icon-frame> to display an icon in a fixed ratio with background etc.","tags":{"access":[{"description":"public","title":"access"}],"since":[{"description":"4.0.0","title":"since"}],"examples":[{"title":"example","content":"<k-icon-frame icon=\"home\" ratio=\"1/1\" back=\"black\" />"}]},"props":[{"name":"element","mixin":{"name":"Frame","path":"Frame.vue"},"description":"HTML element to use as container","type":{"name":"string"},"defaultValue":{"func":false,"value":"\"div\""}},{"name":"fit","mixin":{"name":"Frame","path":"Frame.vue"},"description":"Object fit value to user for the content","tags":{},"values":["contain","fill","cover"],"type":{"name":"string"}},{"name":"ratio","mixin":{"name":"Frame","path":"Frame.vue"},"description":"Aspect ratio for the container. The ratio can be defined freely with the format `widthFraction/heightFraction`.","tags":{},"values":["e.g. `1/1`","`16/9` or `4/5`"],"type":{"name":"string"}},{"name":"cover","mixin":{"name":"Frame","path":"Frame.vue"},"description":"If the content doesn't fit the defined ratio, the component will add additional space around the content. You can change that behavior with the `cover` attribute. If `true`, the image will be cropped to fit the ratio.","type":{"name":"boolean"}},{"name":"back","mixin":{"name":"Frame","path":"Frame.vue"},"description":"Background for the frame. Either shorthand for Panel default colors or actual CSS value.","type":{"name":"string"}},{"name":"theme","mixin":{"name":"Frame","path":"Frame.vue"},"description":"Theme to use for the frame","tags":{},"values":["positive","negative","notice","warning","info","passive","white","dark"],"type":{"name":"string"}},{"name":"alt","mixin":{"name":"Icon","path":"../../Misc/Icon.vue"},"description":"For better accessibility of icons,\nyou can pass an additional alt\nattribute like for images.","type":{"name":"string"}},{"name":"color","mixin":{"name":"Icon","path":"../../Misc/Icon.vue"},"description":"Sets a custom color. Either shorthand\nfor Panel default colors or actual CSS value.","type":{"name":"string"}},{"name":"type","mixin":{"name":"Icon","path":"../../Misc/Icon.vue"},"description":"Unset unused props from mixin","tags":{"see":[{"description":"https://getkirby.com/docs/reference/panel/icons","title":"see"}]},"type":{"name":"null","func":true}},{"name":"icon","description":"Name of the chosen icon","tags":{"see":[{"description":"https://getkirby.com/docs/reference/panel/icons","title":"see"}]},"type":{"name":"string"}}],"slots":[{"name":"default","mixin":{"name":"Frame","path":"Frame.vue"}}],"sourceFile":"src/components/Layout/Frame/IconFrame.vue"}